swagger: '2.0'
info:
  description: 'The API for Role Based Access Control.'
  version: '1.0.0'
  title: 'Role Based Access Control'
  license:
    name: 'AGPL-3.0'
    url: 'https://opensource.org/licenses/AGPL-3.0'
basePath: '/r/insights/platform/rbac/api/v1'
tags:
- name: 'Principal'
  description: 'Operations about principals'
- name: 'Group'
  description: 'Operations about groups'
- name: 'Role'
  description: 'Operations about roles'
- name: 'Policy'
  description: 'Operations about policies'
- name: 'Access'
  description: 'Operations about access'
- name: 'Status'
  description: 'Operations about status'
schemes:
- 'http'
paths:
  /status/:
    get:
      tags:
        - Status
      summary: Obtain server status
      operationId: getStatus
      produces:
      - 'application/json'
      responses:
        '200':
          description: An object describing the server status
          schema:
            $ref: '#/definitions/Status'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /principals/:
    get:
      tags:
        - Principal
      summary: List the principals for a tenant
      operationId: listPrincipals
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of princpal to get'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        '200':
          description: A paginated list of principals
          schema:
            $ref: '#/definitions/PrincipalPagination'
        '401':
          description: Unauthorized
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /principals/{username}/:
    get:
      tags:
        - Principal
      summary: Get a principal in the tenant
      operationId: getPrincipal
      produces:
      - 'application/json'
      parameters:
      - name: 'username'
        in: 'path'
        description: 'Username of principal to get'
        required: true
        type: 'string'
      responses:
        '200':
          description: A Principal object
          schema:
            $ref: '#/definitions/Principal'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /groups/:
    post:
      tags:
        - Group
      summary: Create a group in a tenant
      operationId: createGroup
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - in: 'body'
        name: 'body'
        description: Group to create in tenant
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        '201':
          description: An object describing the group
          schema:
            $ref: '#/definitions/GroupOut'
        '401':
          description: Unauthorized
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    get:
      tags:
        - Group
      summary: List the groups for a tenant
      operationId: listGroups
      produces:
      - 'application/json'
      responses:
        '200':
          description: A paginated list of group objects
          schema:
            $ref: '#/definitions/GroupPagination'
        '401':
          description: Unauthorized
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /groups/{uuid}/:
    get:
      tags:
        - Group
      summary: Get a group in the tenant
      operationId: getGroup
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of group to get'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        '200':
          description: A Group object
          schema:
            $ref: '#/definitions/GroupWithPrincipals'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    delete:
      tags:
        - Group
      summary: Delete a group in the tenant
      operationId: deleteGroup
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of group to delete'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        '204':
          description: Group deleted
        '401':
          description: Unauthorized
        '403':
          description: Insufficent permissions to delete group
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /groups/{uuid}/principals/:
    post:
      tags:
        - Group
      summary: Add a principal to a group in the tenant
      operationId: addPrincipalToGroup
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of group to update'
        required: true
        type: 'string'
        format: 'uuid'
      - in: 'body'
        name: 'body'
        description: Principal to add to a group
        required: true
        schema:
          $ref: '#/definitions/GroupPrincipalIn'
      responses:
        '200':
          description: Group updated
          schema:
            $ref: '#/definitions/GroupWithPrincipals'
        '401':
          description: Unauthorized
        '400':
          description: Bad Input
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    delete:
      tags:
        - Group
      summary: Remove a principal from a group in the tenant
      operationId: deletePrincipalFromGroup
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of group to update'
        required: true
        type: 'string'
        format: 'uuid'
      - in: 'body'
        name: 'body'
        description: Principal to add to a group
        required: true
        schema:
          $ref: '#/definitions/GroupPrincipalIn'
      responses:
        '204':
          description: Principals removed from group
        '401':
          description: Unauthorized
        '400':
          description: Bad Input
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /roles/:
    post:
      tags:
        - Role
      summary: Create a roles for a tenant
      operationId: createRoles
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - in: 'body'
        name: 'body'
        description: Role to create
        required: true
        schema:
          $ref: '#/definitions/RoleIn'
      responses:
        '201':
          description: An object describing the role
          schema:
            $ref: '#/definitions/RoleWithAccess'
        '401':
          description: Unauthorized
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    get:
      tags:
        - Role
      summary: List the roles for a tenant
      operationId: listRoles
      produces:
      - 'application/json'
      responses:
        '200':
          description: A paginated list of role objects
          schema:
            $ref: '#/definitions/RolePagination'
        '401':
          description: Unauthorized
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /roles/{uuid}/:
    get:
      tags:
        - Role
      summary: Get a role in the tenant
      operationId: getRole
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of role to get'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        '200':
          description: A Role object
          schema:
            $ref: '#/definitions/RoleWithAccess'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    delete:
      tags:
        - Role
      summary: Delete a role in the tenant
      operationId: deleteRole
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of role to delete'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        '204':
          description: Role deleted
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    put:
      tags:
        - Role
      summary: Update a Role in the tenant
      operationId: updateRole
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of role to update'
        required: true
        type: 'string'
        format: 'uuid'
      - in: 'body'
        name: 'body'
        description: Update to a Role
        required: true
        schema:
          $ref: '#/definitions/RoleWithAccess'
      responses:
        '200':
          description: Role updated
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /policies/:
    post:
      tags:
        - Policy
      summary: Create a policy in a tenant
      operationId: createPolicies
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - in: 'body'
        name: 'body'
        description: Policy to create
        required: true
        schema:
          $ref: '#/definitions/PolicyIn'
      responses:
        '201':
          description: An object describing the policy
          schema:
            $ref: '#/definitions/PolicyExtended'
        '401':
          description: Unauthorized
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    get:
      tags:
        - Policy
      summary: List the policies in the tenant
      operationId: listPolicies
      produces:
      - 'application/json'
      responses:
        '200':
          description: A paginated list of policy objects
          schema:
            $ref: '#/definitions/PolicyPagination'
        '401':
          description: Unauthorized
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /policies/{uuid}/:
    get:
      tags:
        - Policy
      summary: Get a policy in the tenant
      operationId: getPolicy
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of policy to get'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        '200':
          description: A Policy object
          schema:
            $ref: '#/definitions/PolicyExtended'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    put:
      tags:
        - Policy
      summary: Update a policy in the tenant
      operationId: updatePolicy
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of policy to update'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        '200':
          description: A Policy object
          schema:
            $ref: '#/definitions/PolicyExtended'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
    delete:
      tags:
        - Policy
      summary: Delete a policy in the tenant
      operationId: deletePolicy
      produces:
      - 'application/json'
      parameters:
      - name: 'uuid'
        in: 'path'
        description: 'ID of policy to delete'
        required: true
        type: 'string'
        format: 'uuid'
      responses:
        '204':
          description: Policy deleted
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
  /access/:
    get:
      tags:
        - Access
      summary: Get the permitted access for a principal in the tenant
      operationId: getPrincipalAccess
      produces:
      - 'application/json'
      parameters:
      - name: 'username'
        in: 'query'
        description: 'Unique username of the principal to obtain access for'
        required: true
        type: 'string'
      - name: 'application'
        in: 'query'
        description: 'The application name to obtain access for the principal'
        required: true
        type: 'string'
      responses:
        '200':
          description: A paginated list of access objects
          schema:
            $ref: '#/definitions/AccessPagination'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: 'apiKey'
    name: 'Authorization'
    in: 'header'
definitions:
  Error:
    required:
      - error_key
    properties:
      error_key:
        type: string
  ListPagination:
    properties:
      count:
        type: integer
        format: int64
        example: 30
      first:
        type: string
        format: uri
        example: /api/v1/(resources)/?page=1
      previous:
        type: string
        format: uri
        example: /api/v1/(resources)/?page=2
      next:
        type: string
        format: uri
        example: /api/v1/(resources)/?page=4
      last:
        type: string
        format: uri
        example: /api/v1/(resources)/?page=10
  Principal:
    required:
      - username
      - email
    properties:
      username:
        type: string
        example: smithj
      email:
        type: string
        format: email
        example: smithj@mytechco.com
      first_name:
        type: string
        example: John
      last_name:
        type: string
        example: Smith
      is_org_admin:
        type: boolean
        example: true
  PrincipalIn:
    required:
      - username
    properties:
      username:
        type: string
        example: smithj
  PrincipalOut:
    allOf:
      - $ref: '#/definitions/Principal'
    required:
      - uuid
    properties:
      uuid:
        type: string
        format: uuid
        example: 57e60f90-8c0c-4bd1-87a0-2143759aae1c
  PrincipalPagination:
    allOf:
      - $ref: '#/definitions/ListPagination'
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Principal'
  Group:
    required:
      - name
    properties:
      name:
        type: string
        example: GroupA
  GroupOut:
    allOf:
      - $ref: '#/definitions/Group'
    required:
      - uuid
    properties:
      uuid:
        type: string
        format: uuid
        example: 57e60f90-8c0c-4bd1-87a0-2143759aae1c
  GroupPrincipalIn:
    required:
      - principals
    properties:
      principals:
        type: array
        items:
          $ref: '#/definitions/PrincipalIn'
  GroupWithPrincipals:
    allOf:
      - $ref: '#/definitions/GroupOut'
    required:
      - principals
    properties:
      uuid:
        type: string
        format: uuid
        example: 57e60f90-8c0c-4bd1-87a0-2143759aae1c
      principals:
        type: array
        items:
          $ref: '#/definitions/PrincipalOut'
  GroupPagination:
    allOf:
      - $ref: '#/definitions/ListPagination'
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/GroupOut'
  ResourceDefinitionFilter:
    required:
      - key
      - operation
      - value
    properties:
      key:
        type: string
        example: 'cost-management.aws.account'
      operation:
        type: string
        enum:
          - equal
      value:
        type: string
        example: "123456"
  ResourceDefinition:
    required:
      - attributeFilter
    properties:
      attributeFilter:
        $ref: '#/definitions/ResourceDefinitionFilter'
  Access:
    required:
      - permission
      - resourceDefinition
    properties:
      permission:
        type: string
        example: 'cost-management:*:read'
      resourceDefinition:
        type: array
        items:
          $ref: '#/definitions/ResourceDefinition'
  Role:
    required:
        - name
    properties:
      name:
        type: string
        example: RoleA
  RoleIn:
    allOf:
      - $ref: '#/definitions/Role'
    required:
      - name
      - access
    properties:
      access:
        type: array
        items:
          $ref: '#/definitions/Access'
  RolePagination:
    allOf:
      - $ref: '#/definitions/ListPagination'
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/RoleOut'
  RoleOut:
    allOf:
      - $ref: '#/definitions/Role'
    required:
      - uuid
    properties:
      uuid:
        type: string
        format: uuid
        example: 4df211e0-2d88-49a4-8802-728630224d15
  RoleWithAccess:
    allOf:
      - $ref: '#/definitions/RoleOut'
    required:
      - access
    properties:
      access:
        type: array
        items:
          $ref: '#/definitions/Access'
  Policy:
    required:
        - name
    properties:
      name:
        type: string
        example: PolicyA
  PolicyIn:
    allOf:
      - $ref: '#/definitions/Policy'
    required:
      - group
      - roles
    properties:
      group:
        type: string
        format: uuid
        example: 83ee048e-3c1d-43ef-b945-108225ae52f4
      roles:
        type: array
        items:
          type: string
          format: uuid
          example: 94846f2f-cced-474f-b7f3-47e2ec51dd11
  PolicyOut:
    allOf:
      - $ref: '#/definitions/PolicyIn'
    required:
      - uuid
    properties:
      uuid:
        type: string
        format: uuid
        example: ac1fb5bd-84ba-459f-ab5b-dd24d126826e
  PolicyExtended:
    allOf:
      - $ref: '#/definitions/Policy'
    required:
      - uuid
      - group
      - roles
    properties:
      uuid:
        type: string
        format: uuid
        example: 3c76e965-c1ea-4688-8286-11372d34b63a
      group:
        $ref: '#/definitions/GroupOut'
      roles:
        type: array
        items:
          $ref: '#/definitions/RoleOut'
  PolicyPagination:
    allOf:
      - $ref: '#/definitions/ListPagination'
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/PolicyOut'
  AccessPagination:
    allOf:
      - $ref: '#/definitions/ListPagination'
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Access'
  Status:
    required:
      - api_version
    properties:
      api_version:
        type: integer
        format: int64
        example: 1
      commit:
        type: string
        example: 178d2ea
      server_address:
        type: string
        example: '127.0.0.1:8000'
      platform_info:
        type: object
        example:
          system: Darwin
          node: node-1.example.com
          release: 17.5.0
          version: Darwin Kernel Version 17.5.0
          machine: x86_64
          processor: i386
      python_version:
        type: string
        example: 3.6.1
      modules:
        type: object
        example:
          coverage: 4.5.1
          coverage.version: 4.5.1
          coverage.xmlreport: 4.5.1
          cryptography: 2.0.3
          ctypes: 1.1.0
          ctypes.macholib: '1.0'
          decimal: '1.70'
          django: 1.11.5
          django.utils.six: 1.10.0
          django_filters: 1.0.4
          http.server: '0.6'